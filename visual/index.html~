<head>
 <link rel="stylesheet" type="text/css" href="http://jsxgraph.uni-bayreuth.de/distrib/jsxgraph.css" />
 <script type="text/javascript" src="http://jsxgraph.uni-bayreuth.de/distrib/jsxgraphcore.js"></script>
</head>
<div id="box" class="jxgbox" style="width:500px; height:500px;"></div>
<script type="text/javascript">

JXG.Options.showNavigation = false;
JXG.Options.point.showInfobox = false;

var board = JXG.JSXGraph.initBoard('box', {boundingbox: [-50, 50, 50, -50], axis:true, showCopyright:false, showNavigation: false});

function create_robot_1()
{
   var p1 =board.create('point', [ 0,0], {name: 'X', size:4} );
   var p2 =board.create('point', [-4,0], {name: 'L', size:4} );
   var p3 =board.create('point', [ 4,0], {name: 'R', size:4} );
   var cir=board.create('circle',[ "X", "L" ] ); 
   var robot=board.create('group', [p1, p2, p3, cir] );
}

function create_robot( board, x, y, theta )
{
   var origin = board.create('point', [ 0, 0  ], { visible: false } );
   var vector = board.create('point', [ 0, 10 ], { visible: false } );
   var center = board.create('point', [ x, y  ], { visible: false  } );


   var points = 
     [ board.create('point', [-4, 2], { visible: false } ),
       board.create('point', [-4,-2], { visible: false } ),
       board.create('point', [-2,-2], { visible: false } ),
       board.create('point', [-2,-6], { visible: false } ),
       board.create('point', [ 2,-6], { visible: false } ),
       board.create('point', [ 2,-2], { visible: false } ),
       board.create('point', [ 4,-2], { visible: false } ),
       board.create('point', [ 4, 2], { visible: false } )
     ];

   // create the outline of the object
   var shape = board.create( 'polygon', points );
   var arrow = board.create( 'arrow', [ center, vector ] );

   // append the center point now that we've created the outline
   // of the object so that the transformations will work on the
   // center point as well
   points.push( center );
   points.push( vector );

   var rotate    = board.create( 'transform', [ theta, origin], {type: 'rotate'} );
   rotate.bindTo( points );

   var translate = board.create( 'transform', [ x, y ], {type: 'translate'} );
   translate.bindTo( points );
}

var theta = board.create('slider', [[-25,-25],[25,-25],[0,  0,2*Math.PI]],{name:'angle'});
var x     = board.create('slider', [[-25,-30],[25,-30],[-25,0,25]],{name:'x'});
var y     = board.create('slider', [[-25,-40],[25,-40],[-25,0,25]],{name:'y'});

function xval() { return x.Value(); };
function yval() { return y.Value(); };
function midx() { return xval()/2; };
function midy() { return yval()/2; };
function tval() { return theta.Value(); };


create_robot( board, xval, yval, tval );
create_robot( board,    0,    0,    0 );

var origin = board.create('point', [    0,    0 ], { visible: false } );
var robot  = board.create('point', [ xval, yval ], { visible: false } );
//var midpoint = board.create('point', [ midx, midy ], { visible: true, color: "#00ff00" } );

//board.create('circle', [ origin, robot ] );
//board.create('circle', [ midpoint, robot ] );


</script>



